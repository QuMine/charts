{{- if eq .Values.qumine.type "Deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "qumine.fullname" . }}
  labels: {{ include "qumine.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.qumine.deployment.replicas }}
  selector:
    matchLabels: {{ include "qumine.matchLabels" . | nindent 6 }}
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels: {{ include "qumine.labels" . | nindent 8 }}
    spec:
{{- include "qumine.imagePullSecrets" . | indent 6 }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      containers:
      - name: ingress-controller
        image: "{{ template "qumine.image" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 12 }}
        {{- end }}
        env:
        {{- if .Values.qumine.debug }}
        - name: DEBUG
          value: "true"
        {{- end }}
        - name: PORT
          value: "{{ .Values.qumine.port }}"
        ports:
        - name: ingress
          containerPort: {{ .Values.qumine.port }}
          protocol: TCP
        readinessProbe: {{ toYaml .Values.readinessProbe | nindent 12 }}
        livenessProbe: {{ toYaml .Values.livenessProbe | nindent 12 }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      serviceAccountName: {{ template "qumine.fullname" . }}
{{- end -}}
