{{- if eq .Values.qumine.type "DaemonSet" }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "qumine.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "qumine.name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
      app: {{ template "qumine.name" . }}
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: qumine-ingress
    spec:
      containers:
      - name: qumine-ingress
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: Always
        resources:
{{ toYaml .Values.resources | indent 12 }}
        args:
        {{- if .Values.qumine.debug }}
          - --debug
        {{- end }}
        ports:
        - name: ingress
          containerPort: {{ .Values.qumine.port }}
          protocol: TCP
        {{- if .Values.qumine.metrics.enabled }}
        - name: metrics
          containerPort: 8080
          protocol: TCP
        {{- end }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 2
          failureThreshold: 5
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      hostNetwork: true
      serviceAccountName: {{ template "qumine.fullname" . }}
---
{{- end -}}