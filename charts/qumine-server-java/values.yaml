## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry and imagePullSecrets
##
# global:
#   imageRegistry: myRegistryName
#   imagePullSecrets:
#     - myRegistryKeySecretName

## QuMine image version
## ref: https://hub.docker.com/r/qumine/qumine-server-java/tags/
##
image:
  registry: docker.io
  repository: qumine/qumine-server-java
  tag: v0.0.2-rc1
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistryKeySecretName

## String to partially override qumine.fullname template (will maintain the release name)
# nameOverride:

## String to fully override qumine.fullname template
# fullnameOverride:


server:
  # Whether the minecraft EULA was accepted or not.
  eula: false
  # The type of server to download/start.
  type: "VANILLA"
  # The version of server to download/start.
  version: "latest"
  # The version of server to download/start.
  forceUpdate: false
  # The version of server to download/start.
  customURL: "latest"

  properties:
    # Allows users to use flight on the server while in Survival mode, if they have a mod that provides flight installed.
    # With allow-flight enabled, griefers may become more common, because it makes their work easier. In Creative mode, this has no effect.
    #   false - Flight is not allowed (players in air for at least 5 seconds get kicked).
    #   true - Flight is allowed, and used if the player has a fly mod installed.
    allowFlight: "false"
    # Allows players to travel to the Nether.
    #   false - Nether portals do not work.
    #   true - The server allows portals to send players to the Nether.
    allowNether: "true"
    # Send console command outputs to all online operators.
    broadcastConsoleToOps: "true"
    # Send rcon console command outputs to all online operators.
    broadcastRconToOps: "true"
    # Defines the difficulty (such as damage dealt by mobs and the way hunger and poison affects players) of the server.
    # If a legacy difficulty number is specified, it is silently converted to a difficulty name.
    #   peaceful (0)
    #   easy (1)
    #   normal (2)
    #   hard (3)
    difficulty: "easy"
    # Enables command blocks
    enableCommandBlock: "false"
    # Exposes an MBean with the Object name net.minecraft.server:type=Server and two attributes averageTickTime and tickTimes exposing the tick times in milliseconds.
    # In order for enabling JMX on the Java runtime you also need to add a couple of JVM flags to the startup as documented here.
    enableJmxMonitoring: "false"
    # Enables remote access to the server console.
    enableRcon: "false"
    # Makes the server appear as "online" on the server list.
    # If set to false, it will suppress replies from clients. This means it will appear as offline, but will still accept connections.
    enableStatus: "true"
    # Enables GameSpy4 protocol server listener. Used to get information about server.
    enableQuery: "false"
    # Controls how close entities need to be before being sent to clients.
    # Higher values means they'll be rendered from farther away, potentially causing more lag.
    # This is expressed the percentage of the default value. For example, setting to 50 will make it half as usual.
    # This mimics the function on the client video settings (not unlike Render Distance,
    # which the client can customize so long as it's under the server's setting).
    entityBroadcastRangePercentage: "100"
    # Enforces the whitelist on the server.
    # When this option is enabled, users who are not present on the whitelist (if it's enabled) get kicked from the server after the server reloads the whitelist file.
    #   false - No user gets kicked if not on the whitelist.
    #   true - Online users not on the whitelist get kicked.
    enforceWhitelist: "false"
    # Force players to join in the default game mode.
    #   false - Players join in the gamemode they left in.
    #   true - Players always join in the default gamemode.
    forceGamemode: "false"
    # Sets the default permission level for functions.
    # See #opPermissionLevel for the details on the 4 levels.
    functionPermissionLevel: "2"
    # Defines the mode of gameplay.
    # If a legacy gamemode number is specified, it is silently converted to a gamemode name.
    #   survival (0)
    #   creative (1)
    #   adventure (2)
    #   spectator (3)
    gamemode: "survival"
    # Defines whether structures (such as villages) can be generated.
    #   false - Structures are not generated in new chunks.
    #   true - Structures are generated in new chunks.
    # Note: Dungeons still generate if this is set to false.
    generateStructures: "true"
    # The settings used to customize world generation. Follow its format and write the corresponding JSON string. Remember to escape all : with \:.
    generatorSettings: ""
    # If set to true, server difficulty is ignored and set to hard and players are set to spectator mode if they die.
    hardcore: "false"
    # The "level-name" value is used as the world name and its folder name. The player may also copy their saved game folder here, and change the name to the same as that folder's to load it instead.
    #   Characters such as ' (apostrophe) may need to be escaped by adding a backslash before them.
    levelName: "world"
    # Sets a world seed for the player's world, as in Singleplayer. The world generates with a random seed if left blank.
    #   Some examples are: minecraft, 404, 1a2b3c.
    levelSeed: ""
    # Determines the type of map that is generated.
    #   default - Standard world with hills, valleys, water, etc.
    #   flat - A flat world with no features, can be modified with generator-settings.
    #   largeBiomes - Same as default but all biomes are larger.
    #   amplified - Same as default but world-generation height limit is increased.
    #   buffet - Only for 1.15 or before. Same as default unless generator-settings is set.
    levelType: "default"
    # The maximum height allowed for building. Terrain may still naturally generate above a low height limit.
    # 256 is the maximum possible, it also has to be a multiple of 8.
    maxBuildHeight: "256"
    # The maximum number of players that can play on the server at the same time. Note that more players on the server consume more resources.
    # Note also, op player connections are not supposed to count against the max players, but ops currently cannot join a full server.
    # However, this can be changed by going to the file called ops.json in the player's server directory, opening it,
    # finding the op that the player wants to change, and changing the setting called bypassesPlayerLimit to true (the default is false).
    # This means that that op does not have to wait for a player to leave in order to join. Extremely large values for this field result
    # in the client-side user list being broken.
    maxPlayers: "20"
    # The maximum number of milliseconds a single tick may take before the server watchdog stops the server with the message,
    # A single server tick took 60.00 seconds (should be max 0.05); Considering it to be crashed, server will forcibly shutdown.
    # Once this criterion is met, it calls System.exit(1).
    #   -1 - disable watchdog entirely (this disable option was added in 14w32a)
    maxTickTime: "60000"
    # This sets the maximum possible size in blocks, expressed as a radius, that the world border can obtain.
    # Setting the world border bigger causes the commands to complete successfully but the actual border does not move past this block limit.
    # Setting the max-world-size higher than the default doesn't appear to do anything.
    # Examples:
    #   Setting max-world-size to 1000 allows the player to have a 2000×2000 world border.
    #   Setting max-world-size to 4000 gives the player an 8000×8000 world border.
    maxWorldSize: "29999984"
    # This is the message that is displayed in the server list of the client, below the name.
    #   The MOTD supports color and formatting codes.
    #   The MOTD supports special characters, such as "♥". However, such characters must be converted to escaped Unicode form. An online converter can be found here.
    #   If the MOTD is over 59 characters, the server list may report a communication error.
    motd: "A Minecraft Server"
    # By default it allows packets that are n-1 bytes big to go normally, but a packet of n bytes or more gets compressed down.
    # So, a lower number means more compression but compressing small amounts of bytes might actually end up with a larger result
    # than what went in.
    #   -1 - disable compression entirely
    #   0 - compress everything
    # Note: The Ethernet spec requires that packets less than 64 bytes become padded to 64 bytes.
    # Thus, setting a value lower than 64 may not be beneficial. It is also not recommended to exceed the MTU, typically 1500 bytes.
    networkCompressionThreshold: "256"
    # Server checks connecting players against Minecraft account database.
    # Set this to false only if the player's server is not connectedto the Internet.
    # Hackers with fake accounts can connect if this is set to false! If minecraft.net is down or inaccessible,
    # no players can connect if this is set to true. Setting this variable to off purposely is called "cracking" a server,
    # and servers that are present with online mode off are called "cracked" servers, allowing players with unlicensed copies of Minecraft to join.
    #   true - Enabled. The server assumes it has an Internet connection and checks every connecting player.
    #   false - Disabled. The server does not attempt to check connecting players
    onlineMode: "true"
    # Sets the default permission level for ops when using /op. All levels inherit abilities and commands from levels before them.
    #   1 - Ops can bypass spawn protection.
    #   2 - Ops can use all singleplayer cheats commands (except /publish, as it is not on servers; along with /debug) and use command blocks. Command blocks, along with Realms owners/operators, have the same permissions as this level.
    #   3 - Ops can use most multiplayer-exclusive commands, including /debug, and commands that manage players (/ban, /op, etc).
    #   4 - Ops can use all commands including /stop, /save-all, /save-on, and /save-off.
    opPermissionLevel: "4"
    # If non-zero, players are kicked from the server if they are idle for more than that many minutes.
    #   Note: Idle time is reset when the server receives one of the following packets:
    #     Click Window
    #     Enchant Item
    #     Update Sign
    #     Player Digging
    #     Player Block Placement
    #     Held Item Change
    #     Animation (swing arm)
    #     Entity Action
    #     Client Status
    #     Chat Message
    #     Use Entity
    playerIdleTimeout: "0"
    # If the ISP/AS sent from the server is different from the one from Mojang's authentication server, the player is kicked
    #   true - Enabled. Server prevents users from using vpns or proxies.
    #   false - Disabled. The server doesn't prevent users from using vpns or proxies.
    preventProxyConnections: "false"
    # Enable PvP on the server. Players shooting themselves with arrows receive damage only if PvP is enabled.
    #   true - Players can kill each other.
    #   false - Players cannot kill other players (also known as Player versus Environment (PvE)).
    # Note: Indirect damage sources spawned by players (such as lava, fire, TNT and to some extent water, sand and gravel) still deal damage to other players.
    pvp: "true"
    # Sets the port for the query server (see enableQuery).
    query.port: "25565"
    # Sets the maximum amount of packets a user can send before getting kicked. Setting to 0 disables this feature.
    rateLimit: "0"
    # Sets the password for RCON: a remote console protocol that can allow other applications to connect and interact with a Minecraft server over the internet.
    rcon.password: ""
    # Sets the RCON network port.
    rcon.port: "25575"
    # Optional URI to a resource pack. The player may choose to use it.
    # Note that (in some versions before 1.15.2), the ":" and "=" characters need to be escaped with a backslash (\), e.g. http\://somedomain.com/somepack.zip?someparam\=somevalue
    # The resource pack may not have a larger file size than 100 MiB (Before 1.15: 50 MiB (≈ 50.4 MB)). Note that download success or failure is logged by the client, and not by the server.
    resourcePack: ""
    # Optional SHA-1 digest of the resource pack, in lowercase hexadecimal. It is recommended to specify this,
    # because it is used to verify the integrity of the resource pack.
    # Note: If the resource pack is any different, a yellow message "Invalid sha1 for resource-pack-sha1"
    # appears in the console when the server starts. Due to the nature of hash functions, errors have a tiny probability of occurring,
    # so this consequence has no effect.
    resourcePackSha1: ""
    # When this option is enabled (set to true), players will be prompted for a response and will be disconnected if they decline the required pack.
    requireResourcePack: "false"
    # The player should set this if they want the server to bind to a particular IP.
    # It is strongly recommended that the player leaves server-ip blank.
    #   Set to blank, or the IP the player want their server to run (listen) on.
    serverIp: ""
    # Changes the port the server is hosting (listening) on.
    # This port must be forwarded if the server is hosted in a network using NAT (if the player has a home router/firewall).
    serverPort: "25565"
    # Sets whether the server sends snoop data regularly to http://snoop.minecraft.net.
    #   false - disable snooping.
    #   true - enable snooping.
    snooperEnabled: "true"
    # Determines if animals can spawn.
    #   true - Animals spawn as normal.
    #   false - Animals immediately vanish.
    # If the player has major lag, it is recommended to turn this off/set to false.
    spawnAnimals: "true"
    # Determines if monsters can spawn.
    #   true - Enabled. Monsters appear at night and in the dark.
    #   false - Disabled. No monsters.
    # This setting has no effect if difficulty = 0 (peaceful). If difficulty is not = 0, a monster can still spawn from a spawner.
    # If the player has major lag, it is recommended to turn this off/set to false.
    spawnMonsters: "true"
    # Determines whether villagers can spawn.
    #   true - Enabled. Villagers spawn.
    #   false - Disabled. No villagers.
    spawnNpcs: "true"
    # Determines the side length of the square spawn protection area as 2x+1. Setting this to 0 disables the spawn protection.
    # A value of 1 protects a 3×3 square centered on the spawn point. 2 protects 5×5, 3 protects 7×7, etc.
    # This option is not generated on the first server start and appears when the first player joins.
    # If there are no ops set on the server, the spawn protection is disabled automatically as well.
    spawnProtection: "16"
    # Enables synchronous chunk writes.
    syncChunkWrites: "true"
    # 
    textFilteringConfig: ""
    # Linux server performance improvements: optimized packet sending/receiving on Linux
    #   true - Enabled. Enable Linux packet sending/receiving optimization
    #   false - Disabled. Disable Linux packet sending/receiving optimization
    useNativeTransport: "true"
    # Sets the amount of world data the server sends the client, measured in chunks in each direction of the player
    # (radius, not diameter). It determines the server-side viewing distance.
    # 10 is the default/recommended. If the player has major lag, this value is recommended to be reduced.
    viewDistance: "10"
    # Enables a whitelist on the server.
    # With a whitelist enabled, users not on the whitelist cannot connect. Intended for private servers, such as those for real-life friends or strangers carefully selected via an application process, for example.
    #   false - No white list is used.
    #   true - The file whitelist.json is used to generate the white list.
    # Note: Ops are automatically whitelisted, and there is no need to add them to the whitelist.
    whiteList: "false"

  # Players to add to the initial whitelist.
  whitelist: ""
  # Players to add to the initial ops list.
  ops: ""

## Plugins to download. (comma-seperated list)
## Supported formats are:
##   GitHub: gh://user/repo:version
##   
##
plugins: ""

## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
## If persistence is enabled, operator will create a PVC with mountPath /var/lib/backups
persistence: 
  type: "EmptyDir"

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack). 
  ## Refer https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
  ##
  storageClass: "-"

  ## If you want to disable dynamic provisioning by setting storageClass to "-" above, 
  ## and want to target a particular PV, provide name of the target volume 
  volumeName: ""

  ## Only certain StorageClasses allow resizing PVs; Refer https://kubernetes.io/blog/2018/07/12/resizing-persistent-volumes-using-kubernetes/
  size: 10Gi

  ## Retain the pvc after the helm chart is uninstalled
  retainPersistentVolumeClaim: false

## Extra Arguments to passed to qumine
##
extraArgs: {}
## Extra env. variable to set on qumine container.
##
## extraEnv:
## - name: VARNAME1
##   value: value1
## - name: VARNAME2
##   valueFrom:
##     secretKeyRef:
##       name: existing-secret
##       key: varname2-key
extraEnv: []

## Replica count
##
replicas: 1

## Affinity for pod assignment (this value is evaluated as a template)
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}
## Node labels for pod assignment (this value is evaluated as a template)
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
##
nodeSelector: {}
## Tolerations for pod assignment (this value is evaluated as a template)
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#taints-and-tolerations-beta-feature
##
tolerations: []
## Annotations for qumine pods
##
podAnnotations: {}
## Additional labels for the pod(s).
##
podLabels: {}
## Pod priority class name
##
priorityClassName: ""

## Kubernetes svc configutarion
##
service:
  ## Kubernetes svc type
  ##
  type: ClusterIP
  port: 25565
  ## Specify the nodePort value for the LoadBalancer and NodePort service types for the client port
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  # nodePort:
  ## Static clusterIP or None for headless services
  ##
  # clusterIP: ""
  ## External IP list to use with ClusterIP service type
  ##
  externalIPs: []
  ## Use loadBalancerIP to request a specific static IP,
  ## otherwise leave blank
  ##
  # loadBalancerIP:
  ## Address that are allowed when svc is LoadBalancer
  ##
  loadBalancerSourceRanges: []
  ## Provide any additional annotations which may be required. This can be used to
  ## set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  annotations: {}

  ## Provide any additional labels which may be required. This can be used to
  ## have qumine show up in `kubectl cluster-info`
  ##  kubernetes.io/cluster-service: "true"
  ##  kubernetes.io/name: "qumine"
  labels: {}

## Kubernetes Security Context
## https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
## Example:
##securityContext:
##  allowPrivilegeEscalation: false
##  readOnlyRootFilesystem: true
##  capabilities:
##    drop: ["ALL"]
securityContext: {}
podSecurityContext: {}
##  fsGroup: 1001
##  runAsUser: 1001
##  runAsNonRoot: true

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  limits:
    cpu: 1000m
    memory: 2000Mi
  requests:
    memory: 1000Mi
    cpu: 250m

## Liveness Probe. The block is directly forwarded into the deployment, so you can use whatever livenessProbe configuration you want.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
##
livenessProbe:
  httpGet:
    path: /health/live
    port: http
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 1
  failureThreshold: 5
  successThreshold: 1

## Readiness Probe. The block is directly forwarded into the deployment, so you can use whatever readinessProbe configuration you want.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
##
readinessProbe:
  httpGet:
    path: /health/ready
    port: http
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 1
  failureThreshold: 5
  successThreshold: 1

## Configure extra volumes
extraVolumes: []

## Configure extra volumeMounts
extraVolumeMounts: []

## Prometheus Exporter / Metrics
##
metrics:
  enabled: false
  ## Metrics exporter pod Annotation and Labels
  ##
  # podAnnotations:
  #   prometheus.io/scrape: "true"
  #   prometheus.io/port: "7979"

  ## Kubernetes svc configutarion
  ##
  service:
    ## Kubernetes svc type
    ##
    type: ClusterIP
    port: 8080
    ## Specify the nodePort value for the LoadBalancer and NodePort service types for the client port
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    # nodePort:
    ## Static clusterIP or None for headless services
    ##
    # clusterIP: ""
    ## External IP list to use with ClusterIP service type
    ##
    externalIPs: []
    ## Use loadBalancerIP to request a specific static IP,
    ## otherwise leave blank
    ##
    # loadBalancerIP:
    ## Address that are allowed when svc is LoadBalancer
    ##
    loadBalancerSourceRanges: []
    ## Provide any additional annotations which may be required. This can be used to
    ## set the LoadBalancer service type to internal only.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    annotations: {}

    ## Provide any additional labels which may be required. This can be used to
    ## have qumine show up in `kubectl cluster-info`
    ##  kubernetes.io/cluster-service: "true"
    ##  kubernetes.io/name: "qumine"
    labels:
      metrics: "true"

  ## Prometheus Operator ServiceMonitor configuration
  ##
  serviceMonitor:
    enabled: false
    ## Namespace in which Prometheus is running
    ##
    # namespace: monitoring

    ## Interval at which metrics should be scraped.
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    # interval: 10s

    ## Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    # scrapeTimeout: 10s

    ## ServiceMonitor selector labels
    ## ref: https://github.com/bitnami/charts/tree/master/bitnami/prometheus-operator#prometheus-configuration
    ##
    # selector:
    #   prometheus: my-prometheus

ingress:
  enabled: false
  hostname: ""

geyermc:
  enabled: false
  ## Kubernetes svc configutarion
  ##
  service:
    ## Kubernetes svc type
    ##
    type: ClusterIP
    port: 19132
    ## Specify the nodePort value for the LoadBalancer and NodePort service types for the client port
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    # nodePort:
    ## Static clusterIP or None for headless services
    ##
    # clusterIP: ""
    ## External IP list to use with ClusterIP service type
    ##
    externalIPs: []
    ## Use loadBalancerIP to request a specific static IP,
    ## otherwise leave blank
    ##
    # loadBalancerIP:
    ## Address that are allowed when svc is LoadBalancer
    ##
    loadBalancerSourceRanges: []
    ## Provide any additional annotations which may be required. This can be used to
    ## set the LoadBalancer service type to internal only.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    annotations: {}

    ## Provide any additional labels which may be required. This can be used to
    ## have qumine show up in `kubectl cluster-info`
    ##  kubernetes.io/cluster-service: "true"
    ##  kubernetes.io/name: "qumine"
    labels:
      geysermc: "true"